@reference "tailwindcss";

.mtoast {
  @apply fixed flex min-w-fit flex-col gap-2 whitespace-nowrap p-4;
}

:where(.mtoast) {
  @apply bottom-0 end-0 start-auto top-auto translate-x-0 translate-y-0;
}
.mtoast:where(.toast-start) {
  @apply end-auto start-0 translate-x-0;
}
.mtoast:where(.toast-center) {
  @apply end-1/2 start-1/2 -translate-x-1/2 rtl:translate-x-1/2;
}
.mtoast:where(.toast-end) {
  @apply end-0 start-auto translate-x-0;
}
.mtoast:where(.toast-bottom) {
  @apply bottom-0 top-auto translate-y-0;
}
.mtoast:where(.toast-middle) {
  @apply bottom-auto top-1/2 -translate-y-1/2;
}
.mtoast:where(.toast-top) {
  @apply bottom-auto top-0 translate-y-0;
}

@keyframes slide_in_right {
  0% {
    transform: translate3d(110%, 0, 0);
    visibility: visible;
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide_out_right {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(110%, 0, 0);
    visibility: hidden;
  }
}
@keyframes slide_in_left {
  0% {
    transform: translate3d(-110%, 0, 0);
    visibility: visible;
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide_out_left {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(-110%, 0, 0);
    visibility: hidden;
  }
}

@keyframes pop_in_center {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pop_out_center {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

@keyframes progress_slide {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

.slide-in-right {
  animation: slide_in_right 0.5s;
}

.slide-out-right {
  animation: slide_out_right 0.5s;
}

.slide-in-left {
  animation: slide_in_left 0.5s;
}

.slide-out-left {
  animation: slide_out_left 0.5s;
}

.pop-in-center {
  animation: pop_in_center 0.5s;
}

.pop-out-center {
  animation: pop_out_center 0.5s;
}

.progress-slide {
  animation: progress_slide var(--bar-duration) linear;
}
